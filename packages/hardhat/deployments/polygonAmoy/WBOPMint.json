{
  "address": "0x9E5Aa68A04F9E28150bDE61BC416362B56F8A2A4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "SWAP_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Total_AllTime_Minted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Total_Bop_Swap_Transactions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Total_Mint_Transactions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Total_Wbop_Swap_Transactions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bopReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bopToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bopAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintedAtBlock",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasMintedBefore",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "minter_AllTime_Minted",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bopAmount",
          "type": "uint256"
        }
      ],
      "name": "swapBOP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wbopAmount",
          "type": "uint256"
        }
      ],
      "name": "swapWbop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wbopReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wbopToken",
      "outputs": [
        {
          "internalType": "contract IwbopToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6d9efe5aacb2e3950cf4832672bc5837805657d54744081be9349333f50cc0d4",
  "receipt": {
    "to": null,
    "from": "0xEf353eC37ed86CF28cfb29925748B202B51110C6",
    "contractAddress": "0x9E5Aa68A04F9E28150bDE61BC416362B56F8A2A4",
    "transactionIndex": 1,
    "gasUsed": "939897",
    "logsBloom": "0x
    "blockHash": "0x979ef6c28f449380c07a277d8a7825b04f7e4d70063344d7148ff2343fe91825",
    "transactionHash": "0x6d9efe5aacb2e3950cf4832672bc5837805657d54744081be9349333f50cc0d4",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 7950847,
        "transactionHash": "0x6d9efe5aacb2e3950cf4832672bc5837805657d54744081be9349333f50cc0d4",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ef353ec37ed86cf28cfb29925748b202b51110c6",
          "0x000000000000000000000000915a2284d28bd93de7d6f31173b981204bb666e6"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001d739cc877dd0000000000000000000000000000000000000000000000000009ec7998ccf3efe70000000000000000000000000000000000000000000001a6ab1a082475b9636400000000000000000000000000000000000000000000000009cf05fc047c12e70000000000000000000000000000000000000000000001a6ab377bc13e314064",
        "logIndex": 2,
        "blockHash": "0x979ef6c28f449380c07a277d8a7825b04f7e4d70063344d7148ff2343fe91825"
      }
    ],
    "blockNumber": 7950847,
    "cumulativeGasUsed": "1019813",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xEf353eC37ed86CF28cfb29925748B202B51110C6"
  ],
  "numDeployments": 1,
  "solcInputHash": "ab87f9cd9f293fb480768475a3c7587b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SWAP_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Total_AllTime_Minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Total_Bop_Swap_Transactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Total_Mint_Transactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Total_Wbop_Swap_Transactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bopReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bopToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bopAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasMintedBefore\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minter_AllTime_Minted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bopAmount\",\"type\":\"uint256\"}],\"name\":\"swapBOP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wbopAmount\",\"type\":\"uint256\"}],\"name\":\"swapWbop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbopReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbopToken\",\"outputs\":[{\"internalType\":\"contract IwbopToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mint(uint256)\":{\"details\":\"Mints an equivalent amount of wbopToken for the transferred BOP\"},\"swapBOP(uint256)\":{\"details\":\"Swaps the BOP to WBOP plus the swap fee 0.01 BOP.\"},\"swapWbop(uint256)\":{\"details\":\"Swaps the wbopToken to BOP less the swap fee.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WBOPMint.sol\":\"WBOPMint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/WBOPMint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ninterface IwbopToken {\\n    function mint(address, uint256) external;\\n    function balanceOf(address, uint256) external;\\n    function transfer(address, uint256) external;\\n}\\n\\ncontract WBOPMint is ReentrancyGuard {\\n    address public immutable owner;\\n      struct Minter {\\n        uint256 minted;\\n        uint256 mintedAtBlock;\\n        bool hasMintedBefore;\\n        uint256 minter_AllTime_Minted;\\n    }\\n\\n\\n    uint256 public constant SWAP_FEE = 1e16; // 0.01 BOP\\n    uint256 public Total_Mint_Transactions = 0;\\n    uint256 public Total_Wbop_Swap_Transactions = 0;\\n    uint256 public Total_Bop_Swap_Transactions = 0;\\n    uint256 public Total_AllTime_Minted;\\n    mapping (address => Minter) public minters;\\n\\n    IERC20 public bopToken;\\n    IwbopToken public wbopToken;\\n    uint256 public bopReserve;\\n    uint256 public wbopReserve;\\n    uint256 public feesCollected;\\n    \\n    \\n\\n    constructor (address _owner) {\\n        // Address of the BOP token on Sepolia\\n        bopToken = IERC20(0x2C3aFc7E571cAF77C52505c46c33Bb493BF48264);\\n        // Address of the wbopToken contract Sepolia\\n        wbopToken = IwbopToken(0x2B040b07Fee31e75c542b828218Fd7578A122812); //Update this address\\n        owner = _owner;\\n    }\\n\\n    \\t// Modifier: used to define a set of rules that must be met before or after a function is executed\\n\\t// Check the withdraw() function\\n\\tmodifier isOwner() {\\n\\t\\t// msg.sender: predefined variable that represents address of the account that called the current function\\n\\t\\trequire(msg.sender == owner, \\\"Not the Owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n    /**\\n     * @dev Mints an equivalent amount of wbopToken for the transferred BOP\\n     */\\n    function mint(uint256 bopAmount) external nonReentrant {\\n        require(bopToken.balanceOf(msg.sender) >= 0, \\\"You need more BOP to Mint Wbop Tokens SORRY!\\\");\\n        require(bopToken.transferFrom(msg.sender, address(this), bopAmount), \\\"Transfer of BOP failed\\\");\\n        wbopToken.mint(msg.sender, bopAmount);\\n        minters[msg.sender].minted += bopAmount;\\n        minters[msg.sender].mintedAtBlock = block.timestamp;\\n        minters[msg.sender].hasMintedBefore = true;\\n        minters[msg.sender].minter_AllTime_Minted += bopAmount;\\n        Total_AllTime_Minted += bopAmount;\\n        Total_Mint_Transactions += 1;\\n        bopReserve += bopAmount;\\n    }\\n    \\n    /**\\n     * @dev Swaps the wbopToken to BOP less the swap fee.\\n     */\\n    function swapWbop(uint256 wbopAmount) external nonReentrant {\\n        require(bopToken.balanceOf(address(this)) >= (wbopAmount - SWAP_FEE), \\\"Not enough BOP in reserve\\\");\\n        require(IERC20(address(wbopToken)).transferFrom(msg.sender, address(this), wbopAmount), \\\"Transfer of Wbop failed\\\");\\n        require(bopToken.transfer(msg.sender, wbopAmount - SWAP_FEE), \\\"Transfer of BOP failed\\\");\\n        bopReserve -= wbopAmount;\\n        wbopReserve += wbopAmount;\\n        feesCollected += SWAP_FEE;\\n        bopReserve += SWAP_FEE;\\n        Total_Wbop_Swap_Transactions += 1;\\n    }\\n \\n      /**\\n     * @dev Swaps the BOP to WBOP plus the swap fee 0.01 BOP.\\n     */\\n    function swapBOP(uint256 bopAmount) external nonReentrant {\\n        require(bopToken.balanceOf(msg.sender) >= bopAmount + SWAP_FEE, \\\"You need more BOP to Swap for Wbop Tokens SORRY!\\\");\\n        require(bopToken.transferFrom(msg.sender, address(this), bopAmount + SWAP_FEE), \\\"Transfer of BOP failed\\\");\\n        wbopToken.transfer(msg.sender, bopAmount);\\n        bopReserve += bopAmount;\\n        bopReserve += SWAP_FEE;\\n        feesCollected += SWAP_FEE;\\n        wbopReserve -= bopAmount;\\n        Total_Bop_Swap_Transactions += 1;\\n    }\\n\\n}\",\"keccak256\":\"0xae1a0363fffbe64347d1066979cdaada37633ee2c691d4deb55e066f9107a478\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063e88493be11610066578063e88493be14610206578063ede929fc1461020f578063f071db5a14610218578063f46eccc41461022157600080fd5b80638da5cb5b146101b0578063961e46d9146101d7578063a0712d68146101ea578063b7bac808146101fd57600080fd5b806377cf8420116100d357806377cf84201461012d5780637857215b14610172578063836c5cf614610187578063850f68de146101a757600080fd5b80630c1854e8146100fa578063768aebde1461011657806377b86de414610124575b600080fd5b61010360095481565b6040519081526020015b60405180910390f35b610103662386f26fc1000081565b61010360045481565b60075461014d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010d565b610185610180366004610dcf565b610282565b005b60065461014d9073ffffffffffffffffffffffffffffffffffffffff1681565b61010360025481565b61014d7f000000000000000000000000000000000000000000000000000000000000000081565b6101856101e5366004610dcf565b610610565b6101856101f8366004610dcf565b6109d9565b61010360035481565b61010360015481565b61010360085481565b610103600a5481565b61025c61022f366004610de8565b60056020526000908152604090208054600182015460028301546003909301549192909160ff9091169084565b60408051948552602085019390935290151591830191909152606082015260800161010d565b61028a610d5c565b61029b662386f26fc1000082610e54565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610e6d565b10156103c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f596f75206e656564206d6f726520424f5020746f205377617020666f7220576260448201527f6f7020546f6b656e7320534f525259210000000000000000000000000000000060648201526084015b60405180910390fd5b60065473ffffffffffffffffffffffffffffffffffffffff166323b872dd33306103f1662386f26fc1000086610e54565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af115801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610e86565b6104f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5472616e73666572206f6620424f50206661696c65640000000000000000000060448201526064016103b7565b6007546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90604401600060405180830381600087803b15801561056657600080fd5b505af115801561057a573d6000803e3d6000fd5b5050505080600860008282546105909190610e54565b92505081905550662386f26fc10000600860008282546105b09190610e54565b92505081905550662386f26fc10000600a60008282546105d09190610e54565b9250508190555080600960008282546105e99190610ea8565b925050819055506001600360008282546106039190610e54565b9091555050600160005550565b610618610d5c565b610629662386f26fc1000082610ea8565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb9190610e6d565b1015610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420656e6f75676820424f5020696e20726573657276650000000000000060448201526064016103b7565b6007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af11580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190610e86565b61082a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5472616e73666572206f662057626f70206661696c656400000000000000000060448201526064016103b7565b60065473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361085a662386f26fc1000085610ea8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190610e86565b610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5472616e73666572206f6620424f50206661696c65640000000000000000000060448201526064016103b7565b80600860008282546109669190610ea8565b92505081905550806009600082825461097f9190610e54565b92505081905550662386f26fc10000600a600082825461099f9190610e54565b92505081905550662386f26fc10000600860008282546109bf9190610e54565b925050819055506001600260008282546106039190610e54565b6109e1610d5c565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190610e6d565b1015610b02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f596f75206e656564206d6f726520424f5020746f204d696e742057626f70205460448201527f6f6b656e7320534f52525921000000000000000000000000000000000000000060648201526084016103b7565b6006546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af1158015610b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba39190610e86565b610c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5472616e73666572206f6620424f50206661696c65640000000000000000000060448201526064016103b7565b6007546040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff909116906340c10f1990604401600060405180830381600087803b158015610c7b57600080fd5b505af1158015610c8f573d6000803e3d6000fd5b50503360009081526005602052604081208054859450909250610cb3908490610e54565b9091555050336000908152600560205260408120426001808301919091556002820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556003018054839290610d11908490610e54565b925050819055508060046000828254610d2a9190610e54565b925050819055506001806000828254610d439190610e54565b9250508190555080600860008282546106039190610e54565b600260005403610dc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103b7565b6002600055565b600060208284031215610de157600080fd5b5035919050565b600060208284031215610dfa57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e1e57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610e6757610e67610e25565b92915050565b600060208284031215610e7f57600080fd5b5051919050565b600060208284031215610e9857600080fd5b81518015158114610e1e57600080fd5b81810381811115610e6757610e67610e2556fea164736f6c6343000814000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "mint(uint256)": {
        "details": "Mints an equivalent amount of wbopToken for the transferred BOP"
      },
      "swapBOP(uint256)": {
        "details": "Swaps the BOP to WBOP plus the swap fee 0.01 BOP."
      },
      "swapWbop(uint256)": {
        "details": "Swaps the wbopToken to BOP less the swap fee."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 123,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2838,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "Total_Mint_Transactions",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2841,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "Total_Wbop_Swap_Transactions",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2844,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "Total_Bop_Swap_Transactions",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2846,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "Total_AllTime_Minted",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2851,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "minters",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(Minter)2832_storage)"
      },
      {
        "astId": 2854,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "bopToken",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IERC20)842"
      },
      {
        "astId": 2857,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "wbopToken",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IwbopToken)2819"
      },
      {
        "astId": 2859,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "bopReserve",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2861,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "wbopReserve",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2863,
        "contract": "contracts/WBOPMint.sol:WBOPMint",
        "label": "feesCollected",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)842": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IwbopToken)2819": {
        "encoding": "inplace",
        "label": "contract IwbopToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Minter)2832_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct WBOPMint.Minter)",
        "numberOfBytes": "32",
        "value": "t_struct(Minter)2832_storage"
      },
      "t_struct(Minter)2832_storage": {
        "encoding": "inplace",
        "label": "struct WBOPMint.Minter",
        "members": [
          {
            "astId": 2825,
            "contract": "contracts/WBOPMint.sol:WBOPMint",
            "label": "minted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2827,
            "contract": "contracts/WBOPMint.sol:WBOPMint",
            "label": "mintedAtBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2829,
            "contract": "contracts/WBOPMint.sol:WBOPMint",
            "label": "hasMintedBefore",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 2831,
            "contract": "contracts/WBOPMint.sol:WBOPMint",
            "label": "minter_AllTime_Minted",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}